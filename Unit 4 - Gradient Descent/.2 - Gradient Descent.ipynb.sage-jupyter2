{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":79896576},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.3"}},"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"19bb65","input":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\nfrom scipy.stats import pearsonr","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"c59467","input":"#insert exercise here","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"57bea4","input":"X = df['Mishandled baggage (per 1000 passengers)']\nY = df['Percentage On Time Arrivals']\nplt.plot(X, Y, '.')\nplt.xlabel('Mishandled baggage (per 1000 passengers)')\nplt.ylabel('Percentage On Time Arrivals')","output":{"0":{"data":{"text/plain":"Text(0, 0.5, 'Percentage On Time Arrivals')"},"exec_count":43,"output_type":"execute_result"},"1":{"data":{"image/png":"ce724ca23ea3d430955d3b3ef3b1030b2c4ac3ea","text/plain":"<Figure size 432x288 with 1 Axes>"},"metadata":{"needs_background":"light"},"output_type":"display_data"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"849115","input":"df = pd.read_csv('data/airlines.csv')\ndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Airline</th>\n      <th>Mishandled baggage (per 1000 passengers)</th>\n      <th>Percentage On Time Arrivals</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>American West</td>\n      <td>4.36</td>\n      <td>81.9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>United</td>\n      <td>4.00</td>\n      <td>80.9</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Southwest</td>\n      <td>4.42</td>\n      <td>78.4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>US Airways</td>\n      <td>7.16</td>\n      <td>78.3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Continental</td>\n      <td>4.62</td>\n      <td>75.7</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"         Airline  Mishandled baggage (per 1000 passengers)  \\\n0  American West                                      4.36   \n1         United                                      4.00   \n2      Southwest                                      4.42   \n3     US Airways                                      7.16   \n4    Continental                                      4.62   \n\n   Percentage On Time Arrivals  \n0                         81.9  \n1                         80.9  \n2                         78.4  \n3                         78.3  \n4                         75.7  "},"exec_count":6,"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"ac5cab","input":"# Create an empty model\nmodel = LinearRegression()\n# Choose the response variable, which in this case is y\ny = df['Percentage On Time Arrivals']\n# Choose the predictor variable, which in this case is X:\nX=df.drop(['Airline', 'Percentage On Time Arrivals'], axis=1)\n# Fit the model to the full dataset\nmodel.fit(X, y)\n# print out intercept\nprint('b: ', model.intercept_)\n# print out other coefficients\nprint('m: ', model.coef_)","output":{"0":{"name":"stdout","output_type":"stream","text":"b:  87.20288782505382\nm:  [-2.15244604]\n"}},"pos":6,"type":"cell"}
{"cell_type":"markdown","id":"2abce1","input":"Let's run a linear regression model:","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"aa4b67","input":"Let's explore this airline datset:","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"baf7b1","input":"### Exercise: Gradient Descent\nWrite a function called gradient_descent that takes in an input array, X, and output array, Y, a learning rate, alpha, and a tolerance, tol, and prints the $\\theta_0$ and $\\theta_1$ values obtained by the algorithm above. \n\n\nFor example, if\n```\nX = df['Mishandled baggage (per 1000 passengers)']\nY = df['Percentage On Time Arrivals']\n```\nthen \n```gradient_descent(X,Y,0.05,0.0001)```\nshould give us out:\n\nb (theta0) = 87.16301264227455 and m (theta1) = -2.1458406529174456.\n\n\nHint: you may want to use an outer while loop that deals with the tolerance and updates the $\\theta_0$ and $\\theta_1$ values and inner for loop that updates the $\\frac{\\partial}{\\partial \\theta_0}J(\\theta_0, \\theta_1)$ and $\\frac{\\partial}{\\partial \\theta_1}J(\\theta_0, \\theta_1)$ values.","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"bef835","input":"View the scatterplot:","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"f15474","input":"Watch these videos by Andrew Ng on Gradient Descent.\n\nhttps://www.coursera.org/learn/machine-learning/lecture/8SpIM/gradient-descent\n\nhttps://www.coursera.org/learn/machine-learning/lecture/GFFPB/gradient-descent-intuition\n\n\nFinally, watch the following video, paying special attention to the formulas explained between 0:00 and 4:30:\n\nhttps://www.coursera.org/lecture/machine-learning/gradient-descent-for-linear-regression-kCvQc\n\n<img src=\"images/gradient1.png\" width=500>\n<img src=\"images/gradient2.png\" width=500>","pos":7,"type":"cell"}
{"last_load":1569434485565,"type":"file"}